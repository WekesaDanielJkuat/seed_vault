{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Seedvaultwithreact/seed-vault/src/components/Reports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './reports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const lineChartRef = useRef(null);\n  const doughnutChartRef = useRef(null);\n  const lineChartInstance = useRef(null);\n  const doughnutChartInstance = useRef(null);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Mocking a fetch function from the database\n    const fetchData = async () => {\n      // Replace with your actual database fetching logic\n\n      // Your actual database fetching logic goes here\n      // Example using fetch API:\n      // const response = await fetch('your-api-endpoint');\n      // const data = await response.json();\n      // return data;\n\n      // Mocked data for demonstration\n\n      return [];\n    };\n    fetchData().then(fetchedData => {\n      setData(fetchedData);\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n      const lineCtx = lineChartRef.current.getContext('2d');\n      lineChartInstance.current = new Chart(lineCtx, {\n        type: 'line',\n        data: {\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [{\n            label: 'My First dataset',\n            backgroundColor: 'rgba(75,192,192,0.2)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n            hoverBorderColor: 'rgba(75,192,192,1)',\n            data: data.length ? data : [null, null, null, null, null, null, null]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      const doughnutCtx = doughnutChartRef.current.getContext('2d');\n      doughnutChartInstance.current = new Chart(doughnutCtx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Efficient', 'Inefficient'],\n          datasets: [{\n            data: data.length ? [70, 30] : [0, 0],\n            backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    });\n    return () => {\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"reports\",\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recent-reports\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: lineChartRef,\n            id: \"lineChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), data.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No seeds added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-by-percent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Distribution by Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: doughnutChartRef,\n            id: \"doughnutChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), data.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No seeds added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"j8qTaW5jw8stqQco7Fokl1ax8hA=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Reports","_s","lineChartRef","doughnutChartRef","lineChartInstance","doughnutChartInstance","data","setData","fetchData","then","fetchedData","current","destroy","lineCtx","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","length","options","maintainAspectRatio","scales","y","beginAtZero","doughnutCtx","responsive","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/daniel/Seedvaultwithreact/seed-vault/src/components/Reports.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './reports.css';\n\nconst Reports = () => {\n  const lineChartRef = useRef(null);\n  const doughnutChartRef = useRef(null);\n  const lineChartInstance = useRef(null);\n  const doughnutChartInstance = useRef(null);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Mocking a fetch function from the database\n    const fetchData = async () => {\n      // Replace with your actual database fetching logic\n      \n        // Your actual database fetching logic goes here\n        // Example using fetch API:\n        // const response = await fetch('your-api-endpoint');\n        // const data = await response.json();\n        // return data;\n      \n        // Mocked data for demonstration\n       \n   \n      \n      return [];\n    };\n\n    fetchData().then(fetchedData => {\n      setData(fetchedData);\n\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n\n      const lineCtx = lineChartRef.current.getContext('2d');\n      lineChartInstance.current = new Chart(lineCtx, {\n        type: 'line',\n        data: {\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [\n            {\n              label: 'My First dataset',\n              backgroundColor: 'rgba(75,192,192,0.2)',\n              borderColor: 'rgba(75,192,192,1)',\n              borderWidth: 1,\n              hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n              hoverBorderColor: 'rgba(75,192,192,1)',\n              data: data.length ? data : [null, null, null, null, null, null, null],\n            },\n          ],\n        },\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n\n      const doughnutCtx = doughnutChartRef.current.getContext('2d');\n      doughnutChartInstance.current = new Chart(doughnutCtx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Efficient', 'Inefficient'],\n          datasets: [{\n            data: data.length ? [70, 30] : [0, 0],\n            backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        }\n      });\n    });\n\n    return () => {\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n    };\n  }, [data]);\n\n  return (\n    <div>\n      <section id=\"reports\" className=\"section\">\n        <h1>Reports</h1>\n        <div className=\"reports\">\n          <div className=\"recent-reports\">\n            <h2>Recent Reports</h2>\n            <canvas ref={lineChartRef} id=\"lineChart\"></canvas>\n            {data.length === 0 && <p>No seeds added</p>}\n          </div>\n          <div className=\"chart-by-percent\">\n            <h2>Distribution by Percentage</h2>\n            <canvas ref={doughnutChartRef} id=\"doughnutChart\"></canvas>\n            {data.length === 0 && <p>No seeds added</p>}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}