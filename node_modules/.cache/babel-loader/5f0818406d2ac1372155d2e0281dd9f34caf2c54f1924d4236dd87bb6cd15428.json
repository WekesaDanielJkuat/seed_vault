{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Seedvaultwithreact/seed-vault/src/components/Reports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; // Import Chart.js\nimport './reports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports() {\n  _s();\n  const lineChartRef = useRef(null);\n  const doughnutChartRef = useRef(null);\n  const lineChartInstance = useRef(null);\n  const doughnutChartInstance = useRef(null);\n  useEffect(() => {\n    const ctxLine = lineChartRef.current.getContext('2d');\n    const ctxDoughnut = doughnutChartRef.current.getContext('2d');\n\n    // Destroy the previous chart instance if it exists\n    if (lineChartInstance.current) {\n      lineChartInstance.current.destroy();\n    }\n    if (doughnutChartInstance.current) {\n      doughnutChartInstance.current.destroy();\n    }\n\n    // Create the line chart\n    lineChartInstance.current = new Chart(ctxLine, {\n      type: 'line',\n      data: {\n        labels: ['January', 'March', 'May', 'July'],\n        datasets: [{\n          label: 'Products',\n          data: [50, 70, 110, 90],\n          borderColor: 'rgba(75, 192, 192, 1)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: true\n        }, {\n          label: 'Services',\n          data: [30, 50, 70, 60],\n          borderColor: 'rgba(255, 99, 132, 1)',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n\n    // Create the doughnut chart\n    doughnutChartInstance.current = new Chart(ctxDoughnut, {\n      type: 'doughnut',\n      data: {\n        labels: ['Efficient', 'Inefficient'],\n        datasets: [{\n          data: [70, 30],\n          backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)']\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n\n    // Cleanup function to destroy chart instances when the component unmounts\n    return () => {\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"reports\",\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reports\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-reports\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: lineChartRef,\n          id: \"lineChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-by-percent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Distribution by Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: doughnutChartRef,\n          id: \"doughnutChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Reports, \"wQf/fXyov1HA4kuf+y4OwHLAXes=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Reports","_s","lineChartRef","doughnutChartRef","lineChartInstance","doughnutChartInstance","ctxLine","current","getContext","ctxDoughnut","destroy","type","data","labels","datasets","label","borderColor","backgroundColor","fill","options","responsive","maintainAspectRatio","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/daniel/Seedvaultwithreact/seed-vault/src/components/Reports.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; // Import Chart.js\nimport './reports.css';\n\nfunction Reports() {\n  const lineChartRef = useRef(null);\n  const doughnutChartRef = useRef(null);\n  const lineChartInstance = useRef(null);\n  const doughnutChartInstance = useRef(null);\n\n  useEffect(() => {\n    const ctxLine = lineChartRef.current.getContext('2d');\n    const ctxDoughnut = doughnutChartRef.current.getContext('2d');\n\n    // Destroy the previous chart instance if it exists\n    if (lineChartInstance.current) {\n      lineChartInstance.current.destroy();\n    }\n    if (doughnutChartInstance.current) {\n      doughnutChartInstance.current.destroy();\n    }\n\n    // Create the line chart\n    lineChartInstance.current = new Chart(ctxLine, {\n      type: 'line',\n      data: {\n        labels: ['January', 'March', 'May', 'July'],\n        datasets: [\n          {\n            label: 'Products',\n            data: [50, 70, 110, 90],\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            fill: true,\n          },\n          {\n            label: 'Services',\n            data: [30, 50, 70, 60],\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            fill: true,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n\n    // Create the doughnut chart\n    doughnutChartInstance.current = new Chart(ctxDoughnut, {\n      type: 'doughnut',\n      data: {\n        labels: ['Efficient', 'Inefficient'],\n        datasets: [\n          {\n            data: [70, 30],\n            backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n\n    // Cleanup function to destroy chart instances when the component unmounts\n    return () => {\n      if (lineChartInstance.current) {\n        lineChartInstance.current.destroy();\n      }\n      if (doughnutChartInstance.current) {\n        doughnutChartInstance.current.destroy();\n      }\n    };\n  }, []);\n\n  return (\n    <section id=\"reports\" className=\"section\">\n      <h1>Reports</h1>\n      <div className=\"reports\">\n        <div className=\"recent-reports\">\n          <h2>Recent Reports</h2>\n          <canvas ref={lineChartRef} id=\"lineChart\"></canvas>\n        </div>\n        <div className=\"chart-by-percent\">\n          <h2>Distribution by Percentage</h2>\n          <canvas ref={doughnutChartRef} id=\"doughnutChart\"></canvas>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}